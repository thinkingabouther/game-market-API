// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using game_market_API.Models;

namespace game_market_API.Migrations
{
    [DbContext(typeof(GameMarketDbContext))]
    [Migration("20200831084842_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0-preview.7.20365.15");

            modelBuilder.Entity("game_market_API.Models.Game", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("VendorID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("VendorID");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            ID = -1,
                            Name = "Dota 2",
                            Price = 99.0,
                            VendorID = -2
                        },
                        new
                        {
                            ID = -2,
                            Name = "Microsoft Flight Simulator",
                            Price = 4356.0,
                            VendorID = -2
                        });
                });

            modelBuilder.Entity("game_market_API.Models.GameKey", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameID")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Key")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PaymentSessionID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("GameID");

                    b.HasIndex("PaymentSessionID");

                    b.ToTable("GameKeys");

                    b.HasData(
                        new
                        {
                            ID = -1,
                            GameID = -1,
                            IsActivated = false,
                            Key = "123456"
                        },
                        new
                        {
                            ID = -2,
                            GameID = -2,
                            IsActivated = false,
                            Key = "12345678"
                        });
                });

            modelBuilder.Entity("game_market_API.Models.PaymentSession", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClientID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("ClientID");

                    b.ToTable("PaymentSessions");
                });

            modelBuilder.Entity("game_market_API.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            ID = -2,
                            Password = "12345",
                            Role = "Vendor",
                            Username = "Vasya"
                        });
                });

            modelBuilder.Entity("game_market_API.Models.Game", b =>
                {
                    b.HasOne("game_market_API.Models.User", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("game_market_API.Models.GameKey", b =>
                {
                    b.HasOne("game_market_API.Models.Game", "Game")
                        .WithMany("GameKeys")
                        .HasForeignKey("GameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("game_market_API.Models.PaymentSession", null)
                        .WithMany("GameKeys")
                        .HasForeignKey("PaymentSessionID");
                });

            modelBuilder.Entity("game_market_API.Models.PaymentSession", b =>
                {
                    b.HasOne("game_market_API.Models.User", "Client")
                        .WithMany()
                        .HasForeignKey("ClientID");
                });
#pragma warning restore 612, 618
        }
    }
}
